#include <bits/stdc++.h>
using namespace std;
int data_size;
vector<string> get_input();
long long int solve(unordered_map<char, set<pair<int, int>>> &data);
unordered_map<char, set<pair<int, int>>> parse(vector<string> &data);
void tilt(unordered_map<char, set<pair<int, int>>> &result, int x, int y);
bool find(int x, int y, unordered_map<char, set<pair<int, int>>> &result, char c);
void rmove(int x, int y, unordered_map<char, set<pair<int, int>>> &result, char c);
long long int weight(unordered_map<char, set<pair<int, int>>> &result);

int main()
{
    vector<string> data = get_input();
    unordered_map<char, set<pair<int, int>>> result = parse(data);
    cout << solve(result) << endl;
    return 0;
}

long long int solve(unordered_map<char, set<pair<int, int>>> &result)
{
    map<set<pair<int, int>>, long long int> cache;
    long long int i = 0;
    bool found_cycle = false;
    while (i < 1000000000)
    {
        tilt(result, -1, 0);
        tilt(result, 0, -1);
        tilt(result, 1, 0);
        tilt(result, 0, 1);
        i++;
        set<pair<int, int>> key = result['O'];
        if (!found_cycle && cache.count({key}) != 0)
        {
            long long int cycle = i - cache[key];
            i = i + ((1000000000 - i) / cycle) * cycle;
            found_cycle = true;
        }
        else
        {
            cache[key] = i;
        }
    }
    return weight(result);
}

long long int weight(unordered_map<char, set<pair<int, int>>> &result)
{
    long long int ans = 0;
    for (auto it : result['O'])
    {
        ans += (data_size - it.first);
    }
    return ans;
}

void tilt(unordered_map<char, set<pair<int, int>>> &result, int x, int y)
{
    deque<pair<int, int>> d;
    for (auto it : result['O'])
    {
        d.push_back(it);
    }
    while (!d.empty())
    {
        int dx = d.front().first, dy = d.front().second;
        d.pop_front();
        if (result['O'].find({dx, dy}) == result['O'].end())
            continue;
        int nx = x + dx, ny = y + dy;
        if (result['.'].find({nx, ny}) != result['.'].end())
        {
            result['.'].erase({nx, ny});
            result['O'].insert({nx, ny});
            result['.'].insert({dx, dy});
            result['O'].erase({dx, dy});
            d.push_back({nx, ny});
            int ox = dx - x, oy = dy - y;
            if (result['O'].find({ox, oy}) != result['O'].end())
            {
                d.push_back({ox, oy});
            }
        }
    }
}

/*void rmove(int x, int y, unordered_map<char, set<pair<int, int>>> &result, char c)
{
    for (int i = 0; i < result[c].size(); i++)
    {
        pair<int, int> check = {x, y};
        if (result[c][i] == check)
        {
            result[c].erase(result[c].begin() + i);
            return;
        }
    }
    return;
}

bool find(int x, int y, unordered_map<char, vector<pair<int, int>>> &result, char c)
{
    for (int i = 0; i < result[c].size(); i++)
    {
        pair<int, int> check = {x, y};
        if (result[c][i] == check)
            return true;
    }
    return false;
}*/

unordered_map<char, set<pair<int, int>>> parse(vector<string> &data)
{
    unordered_map<char, set<pair<int, int>>> result;
    int n = data.size(), m = data[0].size();
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            result[data[i][j]].insert({i, j});
        }
    }
    return result;
}

vector<string> get_input()
{
    vector<string> input = {"#..O...O...O....##O#O#O..O.#...O..O..#O.#O.#.O....##.OOOO....O.O.OO..O##..O..O....#O#....#..O.#.#.O.", "OO.....O.O...##..#.#.......#...#.O.#.#..#...#...#....##O......#O#........#...O......O.#......#O.O...", ".O..##.OO.OO#OO.......O..O.#...#O.O...O.O.#..OO.#...O.OO.#.O.#....O.O..O.O#O...O...#.O..O...#......O", "...........#...#.O..O.#.O.#..O#.O.OO.....##O..##..OO..O..#OO..O...#.#..............OOO.......#...O..", "..##.O#.....OO.O#O.#.##.....O...#...#..O#O#.....#..O..O................OO..........#....#..O#....#..", "..OO.....O..#.....O...#O.O.O...#....##...#....O.OO#.#..#O..O.....O.O...#.O...OO..O.O#O.O#OO#..O..#..", "O...O....#.##O........................O....#...#....#.O#..O.....O..O.##O#...O.#..O..OO...O#O.#....O.", "O...O.O...O.O................O.....O.....#.#..OO...O.....#...O.#..........O...O..O..O.....#.#....O.O", "#O......O.#OO...#..O#.....#.#.O.#...O...O...#....#.#O.#...#...O.O....O..O##O.#..........#.....#O..#.", ".#.......O.##O..#..O.......O...O.O#..........O#..O......O.....O......O...O....O.#.....##..#O..#.....", "...O#..#.O..#O..#O##.....#....O..#O...O.....#....O....OO#..OO.OOO......#..#...O#O...#..O#.#.#...O...", "#....O.#.....#O...#...........O.......O.#...O.....O#.....#.....OO#O......O.O..O.......#OO..O...OO.O.", "......OOOO.#...O..#.#.......OO.....O........#O...O.O.....#...#.#O.O.#.#O..O..........#.O...O..O.....", "......O.OO.....O.O.OO.O..#.O.#.##.....O.#......O......#.O....................OO.#O.........#.......O", "O#O...#O#....O.#..##.#.#O.O#O#.........O#OO..O....O#..OOOO.O#.#####O#.#O#..O##.OO...##..O#O..###OO..", ".O#O#O#O.O.O.....OOO..OO.O#...#..#O....#..O#OO.O..#..O.OOO..#OO.OO....O#.....O.#......#.OO..O.###.O#", "O#..O.#.#..#O..#.#.O#..OO.....O..OO...O.#O.#..OO#O..OO..#..O.O.#....O.OO.##O.....O.#.O.#...O...#...#", "#..O#..O...#......O..O#O.....##.OOO..#.O.#..#.##..O..O#O##........#..O.....#.....O..O...#.#...#.#...", "..#.O.#........O.....OO..O#.#....O..O.OO##O#####.O..##...#..O.O....O.#OO#.......O....O.O..........OO", "O.#.###...O#.....#.#....#.......OO.#.#......#...O..#.......#.#OO..O....O.O###.OO..#...##.........O..", "..O.#O...O...#..#...O..O..#...#O..#.O....O..#O...#...O..#...O....O......#...OO..#.O##O.O....OOO#O...", ".OO.#O..#.O#...O...O.O...#..#OOO....#.OO..#.O.....O.#O....O......#..O#..OO#.#...#.....O..#..O..OO.#O", ".....O.#.O...O.......##...O.OOO.O...O.OOOO........O.#..O.OOO#.#....##....O..####O.......#.O.#O.#OOO.", "####.##..O...O..#O..O.##.O..#.#.O......O#....#..OO.#.##O#O....O..#.##.#.O.#O.O#..O..##OO....O..#.O.O", ".#.O..#..##......O....O..#...O..O.OO......O#........#..O.###.OO##.....##.#..O#.O..#OO.##.#O..O....O.", "....O#.O#....O#O....##.....#...#..O.OO.OO....#.#...OOO#.#...O..O.OO...O....OOO.O.....O.OOOO...#..O.#", "...#O..O#.OOO..O..O.....#.#...O.#O.....O#....O#..O#..#....#OO..O..O.O#.##......#O...#..O......#.#O.#", "...OO.O.......O..........##.....##....OO....#.O.O.O#......#......#.#......O.OOO....O.O.#.O..#...##.O", ".O..O.#....OO..OOO.......#......O....O...O.......OO..OO....O....O.O.OO..O.#...#OO.O#.O.#.....#......", ".O.O.##....###O.##.O..#.OOO...........O...O..#.O#.O#O.O.##.O#..O#............O......##...OO.O..O...#", "..O.....OO.OO.O#.O......O..O#..O.O#.....O..O.........O...O#.O.##.#O#.....#.#.O.#.O...#.....OOO.#...#", "OOO..O.#....O.O...O.O.O...#.O.O...#.......#....#..##...##..##OO....##..#OO.#..#OO.#OO.O.#O.#....O...", "..O#.....O....O.O..O.#O#...OO#.OOO##...O#.....#..O#O.OO#.##.O..O.....O...O...O.....#......OO...O.##.", "O#.......O#.....#....#.#.....O.O.#..#O..O.....#....O.#.#..O...##...O..#O.O.....O.OO....O....#.#..#.#", "#OO.....OO.#.O.O..........#..#O.##O.#.#.#..O...#.#....#.OO...OO#.O..#.........OO.#..O.#O.OO....#O##.", "O.##...#...O.#O.O#..#O....OOO....O.#...#O#..O.O.#..O.##....O#..OOO....##..O.....##......O.O.#...#...", "..O.#..O.#.###O.#O.O..O.#.O....#.OOO...OO...O.OOO..OOO..O.O.#.O#.O.#O...O...#..#.O###..#.#...OO.OOO.", "...#..#.#.......OO#O..O##.#.O..#.O....O##..O..O..#..OO..OO..O.O.OO#O...#.O..#OO...O...#...#..#.##.#.", "..O....O.......O....O#O....#....#.####...O..O.#......O..#....O..#...#..O..#.O.O..O#.OO#.OO.O...O.O.O", "......#.O...O........#O.O.#..O..O.O.O....OO..##..O#..O#.#...O........O...#.O....#...##.OO#OO...O....", "O.O.#.O...O....#........#.O..#O...O#.#.O.#.O.O.........#.O#O......O..O...#...#......O.....#O.#.O....", "....#...O.#.#..O.O......#OO.......O.#.O....#..#.#.......O.#...O...O..#OO.#O#.....#.O.#O.O#OOOO.#....", ".OO......O.O.OO.O#O...O...O#....#..#.#.##O..O.#.##.OO#...#..O.....OOO#..#............#....#..#..O.##", "O........O.O#..O..O....#......#..O..O..O.#O..#.#.O.####..O..O.O...O##...O......O.O...OO#O.OO#..O....", "..O#.O...#.O##.#..#....O..O...O...........#O........O......O.....#O....#..OOO#...O.O#..OO##O.#.O#OOO", ".#..#...O###..OO.....O.#..O.O..###..O..#O.#.........#O..OO......O....O.#O.#...OO....#O...#.OO....#OO", ".......#.O...OOOO..#O.#..#O..O.##O..#.O#....O.#O#.#.......#O##.O..OOO..#....O.O###.O#..O..#.O.......", "OO...#......#O#..O.#O#....##.....O....O...OO.#..OO.O.....#..#......O..O....#....#.....#..#....O.O.O.", "........#.OO.#.O...O#.##...#...#.#.#....O.O...OOO.O..#..O..O.O.OO.#O....O.#....#...O..#O...O##......", "O.......#....O.O...#.O.O.O.O...O....O....#..O.#.O.....OO....O#..OO#.O......O...#...#O.#...##..O.....", ".O.#O....#O.OO.O.......O...#OO..#.#OO.......#.O.#...O..#OO...#.......O...#.O...OO.............O..O..", ".O......O.....O..O.OO..O.#.O###.......O..O......#.O.....OO........O.#.......#..#O..O.OO.#.....#.OO#.", ".#........OO.O.#.#O.#.....#...#...O...#..O.....#...O.#..#O....O..#..O#........#.O....OO.#.....O.#..O", "#.#.........O..##.O#..###.O..#.....O#O#.#..#O.#.....#O#.#.....#.#.O...O#.##.........#..O#.........O.", "......#..OOO#..#.....O.#..OO.OO.###.#.O..........O..OO..#......#...O.#.....O.O........O..O#O..#.#...", "O.........O...#..O...#..O.#...OO....#..##OO...#..........O.OOO.....O..O#O....#..#.OOO.#......O......", ".O#..O..#O.O.O.#O#..O.O..OO#..O...#....O..O.....O....#...#..#OO.OO.O..#...#O#.OO.#...#........O.....", ".O.#O...O...#...........O....O....##..OO...O.#..O..O#..OO#.O.#...#O...##O#.#......O........#.#.....O", "O..#OO.O.OO..O.....O..#O..O........#O.O............#.O.....O..#.##.....##........OO.O..O..O.#.O.....", "..O.#....O...#...#OO.##.O....#O.O#...O..O...#O#O.O.OO..O...........###......#....#.O..O.#O.O...O..#O", ".O.......#...OO....OO..OO.#O.....O.#........O.....O#O.#..O...#..........##O..O.O.....#....#O.##OO..O", "#.#..#..OO#..#...O.....#OO#..O.#.O.O#.....OOO.OO.#O.O..OO.O.OO.O#O.O..#..O.##...#.#.O.........#.....", ".#O.#OO.O.#O.#.###....O...#.#.OO.#OO....#..##OO#...#..O#...#....#..OO..#..##...OO.......O....O.#...O", "....O#.....O.O#.......O..O.OOO#.#.......OO..#.......O...#O..#..#.OOO.OO...O##..........O.....O.O#OO.", "...#.O...O.#.OO.O.#........O.##OO....##O..#O.#....O..#.##......#O.O.OO...OO.....O.##........O.....##", "#.OO#..#...O....O.......O#.#.#..#OOO#.O........##..O..O.......O...O..O..#...O#..#..#...OO.#..##.#O.O", "....O...O#.......###O...#OO..O#..OO#O.....O........O.O.O#OO...O...O#......##.O.##O...O..O##.#O..O..O", "..OO..OOO.#.O....#......O...#O....O....OOO#..#....O#.O.#.#.#...O.#......#.##..#O...O...#..#.O.#.#.#O", ".#OO.#..O###OO.#.O..O.....#.#...O..O#..###...#.O..O....#........O.....OO..#O.OO...O.O.......#.......", "#......O.......O...#OO....O.....O.O##O##.#....#..OO.......O..#O........O......#.#..O..#....O....#.O#", "...O..#..........#...O....#..O#..#..O#...##.....O..O...O..O......#....O.O.........#.OO#OO.#.......O.", "..O#OO..OO.....O.#..O.#O........#OO#..OO.O...O..O.##O...O.O#..O#...O.OO.#.O...O....#..OO.....O.OO...", "........#OO.........O##..O.OO...O#....O#O.O.O..O..O...#O.O.#..O.O......O.O#.........#.O.O.#....OO..O", ".#.O....#..O.O..O##.#....O.......#.O.#......#.....##.O.......OOO#..#..###......O###.O#...#..OO.O...#", "#.O#......OO#....O.#O...#..O....O..#O#OO.....O.....#.#.O##...O.O#...OOOO#.O.#.#....O.#O..#.#O#...O..", "OO..OO#..O.O.#......#..O....#....#.......#O.#O#O#.O........#....#.O.OO.#..#.O.O.#O#..O.O.O.#.O.O.#..", "......O....#O.O..#.#.....#.O.O.O#..O.O.#....#.....#O..#..O#..OO....O..OO#...O..O............#O..OO.O", "....#......O...#.O...#O...OO...O###......O.O.O.#....#.....OO......O.##.OO....O....O.O##.....#.#.O.#O", "O.....#.O#.......O.#...O.O.#..#.#.O....#..#.........OO.O.#O.##.........O#.#.#....O...O..#..#.#..O...", "..O#......#.O...#O...O#...OO......O...O.O#......O...OO#O.O.O...#O..OO....O.OO.#....O.O.#..##.#..#O..", "....O...#.#.OO#..O.O..O.OO.....#O...O..#......O......#....O.....OO.O#......#O.#.#..O......#...##O.O.", "..O.OO...#O#...#O....OOO.#.O.##..O..O..O#..O..O.#...OO...O.....O.O....O...O....#.O.....O.#O#O..#O#..", "##O..#.#.O#.O#...O...O.O...##....#....#..#O...O..........OO.O.#.........##....#O#O#O.#.#.....##O#...", "O.#..O.##O..O.....#.#.O.O...#.O..O.##..O.OO##...#.#..O.......#...O....#.#.....O.....#O..#......#O.##", ".O.O.......#O.O...OO..#..#...#..O.....O...##O....#..#..#O..O...O#.........O..#.....O..OOO....O#..##.", "OOO.OO..O#.....#.O........O..##.....O...O#.O.#....O......#OO.....#.#.........O..#O...##O....#.#..O..", "..#.#..O...#.OO.O...O..#.#....#.##...#.O..O.#.....#...O.#.#.....#OO.....#.O...O....O....O..#.O.....O", "...#.......O..O..#.....#.OOO......O......#....#...#.O....#.O....#..#..O.....O.#..#....O..#.........#", ".O#.##.####.O#.O.##..#.......#.O#....O..#..#OO..O....O#.O..O..O..O.#.#..#O..#O.#.#.O.O....#O...O.#..", "O###..#....O#...O.#...O#...#OO.##.O#O..OO###...O.#...#O.O..O##OO....#....O...#..O.#O#.#O#O.....##O#.", "...#..#..OOOO..O#.....#O..................#..O..........#..............O...........O...........O....", "O....O#O.O..O###....##.OOO.O#O.OO.#.O.O......#.OO.O.....O.O..O.OO..#..#........O..#..O..O.O.#.#O..O.", "..###..O.#....O....#..##.O....#..OO....OOO.....#..#.#O.O..#...#.#...O#..OOO#O#.......O..O.O.#O.#O.O.", ".#...O....#...#....##..O....#.#O.O#.O...........OOO.............O....#.#..O....#O.O...O.O..O..##...#", "....#...O.........#..O...#O.............O...OO..#..O.#OO##.O....O....O....#O..#......OO..OO##O..###.", ".......O...#O#O...##...O......#....##.#.#.......O#.O...OO..#.##.OOOO..#...O..O...###.#........O..O..", ".......O......O..#.O.O..O..##OO.............O#...........OOO..OOO.O.#O##..O...#O....O#....O........#", "O#..O..OO.OO.O....O...#......#..#...O.#OOO....#O.#.O.......##...O....#.#.OO..#...O..O....O#.........", "#.O##......#.....O..###...O..#.O.....#.#..##.O.#...O.....O..O..O......#..O...O#O.....O....O#.O.O..#O", ".#O.O.....O..O#.#O.......##..O..OO#..#.......O..OOO..O..OO...O...#OO......#.OO........###O...##....."};
    data_size = input.size();
    return input;
}